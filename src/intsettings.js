module.exports = {
    version: "0.7.0",                                      // internal, shortened version
    versionFull: "open beta 0.7",                          // full, human readable version
    verboseLogging: false,                                 // whether or not to log debug info to the console
    bypassIP: null,                                        // whether or not to bypass the IP address that is gotten from the IP provider(s)
    ipProvider: "https://api.ipify.org/?format=json",      // default IP provider
    ipProviderBackup: "http://bot.whatismyipaddress.com",  // backup IP provider for when the first one is down
    configFile: "./settings.cfg",                          // the main config file
    logger: {
        basePath: "./logs/"                                // base path to the folder where all logs should be put into
    },
    defaultValues: { // default values to generate the config and .env files with
        env: "ACCOUNT_EMAIL=Replace this text with your account E-Mail\nAPI_KEY=Replace this text with your global API key",
        settings: "# Configuration file for CloudflareDUC by Sv443 (https://github.com/Sv443)\n# © Sv443 2018-2019 - Licensed under the MIT license: https://sv443.net/LICENSE\n\n# If you don't know what you're doing, please take a moment to read the tutorial on https://github.com/Sv443/CloudflareDUC#configuration-explained-step-by-step\n# Or if you need personal help, please join my Discord server and ask away in the #quick-support channel: https://discord.gg/xywxaaN\n\n\n\n\n\n\n\n# Your domain name and top-level-domain\ndomain = \"sv443.net\"\n\n# This is the name of the domain you added to Cloudflare and want to be updated\n# This value should be exactly the same thing that you see in the top left corner when you go to the Cloudflare dashboard\n#\n# ! ! !   IMPORTANT   ! ! !\n#\n#  >   Do *NOT* include protocol, subdomain and path but *DO* include top-level-domain! (example: \"google.com\" instead of \"https://www.google.com/xyz\")\n#  >   You can find your domain name in the top left of the Cloudflare dashboard, see https://sv443.net/cdn/cfduc/domainname.png for an example\n#\n#  >   Structure of a URL:             \"protocol://subdomain.domain.topleveldomain/path?querystring#anchor\"\n#  >   Example:                        \"https://www.google.com/search?q=test#something\"\n#\n#  >   What you need to use instead:   \"domain.topleveldomain\"\n#  >   Example:                        \"google.com\"\n#\n# ! ! !   IMPORTANT   ! ! !\n\n\n\n\n\n\n# Log Status 2xx to console\nlogStatus2xx = \"false\"\n\n# Whether or not a class 2xx status should be logged to the console or not\n# true = yes, log to console\n# false = no, don't log to console\n# Default: false\n\n\n\n\n\n\n\n# Default timeout\ndefaultTimeout = \"4\"\n\n# After this time (in seconds) a sent request that hasn't gotten a response will fail\n# If your internet connection is bad, increase the value\n# Default: 4\n\n\n\n\n\n\n# IP interval\ngetIpInterval = \"60\"\n\n# On interval (in seconds) your public IP will be gotten\n# Recommended is 60-120\n# Too few seconds and you might get rate limited by the IP provider(s) and a DNS record update will fail\n# Default: 60\n\n\n\n\n\n\n\n# Host ping interval\npingInterval = \"60\"\n\n# The interval (in seconds) on which your host will be pinged to find out if it's still online or gets a class 5xx error\n# Recommended is 30-180\n# If you have rate limiting enabled or wanna save on bandwidth, increase this value. This also means that the net downtime of your server will be higher though so be careful!\n# Default: 60\n\n\n\n\n\n\n\n\n# Host ping timeout\npingTimeout = \"8\"\n\n# After how many seconds a host ping should time out\n# If your internet connection is bad, increase the value (but not higher than the value you set for \"pingInterval\" above)\n# Default: 8\n\n\n\n\n\n\n\n\n# Show own IP in console\nshowOwnIP = \"true\"\n\n# Whether or not the own public IP address should be logged to the console\n# true = yes, log to console (watch out, this could make you accidentally leak your IP address)\n# false = no, don't log to console\n# Default: true\n\n\n\n\n\n\n\n\n\n# Webhook request on update\n@WebhookRequest\n    # Whether or not an HTTP request should be sent to the URL specified below every time a DNS record update occurs\n    $sendRequestOnUpdate = \"false\"\n    # true = yes, send an HTTP request\n    # false = no, don't send an HTTP request\n    # Default: false\n\n\n    # Set the request method here:\n    $method = \"POST\"\n    # Default: \"POST\"\n\n\n    # Set the URL here:\n    $URL = \"http://localhost:8080\"\n@end WebhookRequest\n\n# This HTTP request will be sent every time a DNS record update occurs and it will contain information about all updated DNS records\n# This should look something like this (taken from my DNS setup with two type A records):\n#\n# {\n#     \"date\": \"Fri May 03 2019\",\n#     \"time\": \"05:19:46 GMT+0200 (GMT+02:00)\",\n#     \"unixTimestamp\": 15568535860,\n#     \"records\": [\n#         {\n#             \"name\": \"sv443.net\",\n#             \"type\": \"A\",\n#             \"proxied\": true,\n#             \"id\": \"[HIDDEN]\"\n#         },\n#         {\n#             \"name\": \"www.sv443.net\",\n#             \"type\": \"A\",\n#             \"proxied\": true,\n#             \"id\": \"[HIDDEN]\"\n#         }\n#     ]\n# }\n\n\n\n\n\n\n\n\n\n§END"
    },
    checkInterval: 20 // in seconds - interval between DNS check API calls
}
